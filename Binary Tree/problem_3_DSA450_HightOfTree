//Save this file as binaryTree.java

import java.util.LinkedList;
import java.util.Queue;

public class binaryTree {
    private static int count = -1;
    static class Node{
        int data;
        Node left;
        Node right;

        Node (int data){
            this.data = data;
            this.left = null;
            this.right = null;
        }
    }

    static class BinaryTree{
        static int idx = -1;
        public static Node buildTree(int[] nodes){
            idx++;
            if(nodes[idx] == -1){
                return null;
            }
            Node newNode = new Node(nodes[idx]);
            newNode.left = buildTree(nodes);
            newNode.right = buildTree(nodes);
            return newNode;
        }
    }

    //Question 3: hight of the tree.
    public static int NoOfLevels(Node root){
        if(root == null){
            return 0;
        }

        int LevelsOfLeftNodes  = NoOfLevels(root.left);
        int LevelsOfRightNodes = NoOfLevels(root.right);

        return Math.max(LevelsOfLeftNodes, LevelsOfRightNodes)+1;
    }

    public static void main(String[] args){
        int[] nodes = {1,2,4,7,-1,-1,9,-1,-1,5,8,-1,-1,-1,3,-1,6,17,-1,-1,10,-1,9,-1,-1};
        BinaryTree tree = new BinaryTree();

        Node root = tree.buildTree(nodes);
        System.out.println(NoOfLevels(root));
    }


}
