  
class Linkedlist {

    Node head;
    private int size;

    Linkedlist() {
        size = 0;
    }

    public class Node {
        int data;
        Node next;

        Node(int data) {
            this.data = data;
            this.next = null;
            size++;
        }
    }
    
    public void addLast(int data) {
        Node newNode = new Node(data);

        if(head == null) {
            head = newNode;
            return;
        }

        Node lastNode = head;
        while(lastNode.next != null) {
            lastNode = lastNode.next;
        }

        lastNode.next = newNode;
    }

    public void printList() {
        Node currNode = head;

        while(currNode != null) {
            System.out.print(currNode.data+" -> ");
            currNode = currNode.next;
        }

        System.out.println("null");
    }
    
    public Node removeDuplicatesInUnsortedList(Node head)
    {
        Node temp = head, prev = null;
        HashSet<Integer> n = new HashSet<> (0);

        /*if(temp == null || temp.next == null){
            return head;
        }*/

        n.add(temp.data);
        prev = temp;
        temp = temp.next;

        while(temp != null){
            if(n.contains(temp.data)){
                prev.next = temp.next;
                temp = temp.next;
            }
            else{
                n.add(temp.data);
                prev = temp;
                temp = temp.next;
            }
        }
        
    }
    
    public static void main(String args[]) {
        Linkedlist list = new Linkedlist();
        list.addLast(1);
        list.addLast(2);
        list.addLast(2);
        list.addLast(4);
        list.addLast(4);
        list.addLast(7);
        list.addLast(9);
        list.addLast(9);
        
        list.head = list.removeDuplicatesInUnsortedList(list.head);
        list.printList();


    }
}
