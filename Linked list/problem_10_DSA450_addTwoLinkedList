//Save the file as Linkedlist.java

class Linkedlist {

    Node head;
    private int size;

    Linkedlist() {
        size = 0;
    }

    public class Node {
        int data;
        Node next;

        Node(int data) {
            this.data = data;
            this.next = null;
            size++;
        }
    }
    
    public void addLast(int data) {
        Node newNode = new Node(data);

        if(head == null) {
            head = newNode;
            return;
        }

        Node lastNode = head;
        while(lastNode.next != null) {
            lastNode = lastNode.next;
        }

        lastNode.next = newNode;
    }

    public void printList() {
        Node currNode = head;

        while(currNode != null) {
            System.out.print(currNode.data+" -> ");
            currNode = currNode.next;
        }

        System.out.println("null");
    }
    
    public static Node reverseTheLinkedList(Node head){
        Node curr = null, prev = null, next = null;
        curr = head;
        
        while(curr != null){
            next = curr.next;
            curr.next = prev;
            
            prev = curr;
            curr = next;
        }
        
        head = prev;
        return head;
    }
    
    
    
    //Function to add two numbers represented by linked list.
    static Node addTwoLists(Node first, Node second){
        // code here
        // return head of sum list
        Node sum = null;
        int carry = 0;
        first = reverseTheLinkedList(first);
        second = reverseTheLinkedList(second);
        
        while(first!=null || second!=null || carry>0){
            int newVal = carry;
            
            if(first!=null){
                newVal+=first.data;
            }
            
            if(second!=null){
                newVal+=second.data;
            }
            
            carry = newVal / 10;
            newVal = newVal % 10;
            
            Node newNode = new Node(newVal);
            newNode.next = sum;
            sum = newNode;
            
            if(first!=null){
                first = first.next;
            }
            if(second!=null){
                second = second.next;
            }
        }
        
        return sum;
        
        
  }
  
  public static void main(String[] args) {
        Linkedlist first = new Linkedlist();
        Linkedlist second = new Linkedlist();
        Linkedlist newList = new Linkedlist();
        
        first.addLast(1);
        first.addLast(2);

        second.addLast(1);
        second.addLast(2);
        second.addLast(3);

        newList.head = newList.addTwoLists(first.head,second.head);
        newList.printList();   

    }
}
